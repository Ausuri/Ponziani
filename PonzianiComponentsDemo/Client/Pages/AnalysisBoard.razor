@page "/analysisboard"
<h3>AnalysisBoard</h3>

<div class="container">
    <div class="row">
        <div class="col-md-auto">
            <Chessboard OnMovePlayed="OnMovePlayed" Size=400 @ref="board" />
        </div>
        <div class="col" style="height:100%;vertical-align:middle;">
            <EvaluationGauge Score="@Score" ScoreText="@ScoreText" Orientation="Orientation.Vertical" style="height:350px;padding-top:25px;" />
        </div>
    </div>
    <div class="row mt-2">
        <Engine @ref="engine" OnEngineInfo="OnEngineInfo" />
    </div>
    <div class="row mt-2">
        <div class="col-md-auto">
            <Scoresheet Game="game" style="width:400px" OnMoveSelected="OnMoveSelected" Variations="true" HierarchicalDisplay="true"/>
        </div>
    </div>
</div>

@code {
    private Engine engine;
    private Chessboard board;

    private Game game = new Game();

    private int Score { set; get; } = 0;
    private string ScoreText { set; get; } = String.Empty;
    private List<ExtendedMove> vmoves = null;

    void OnMoveSelected(MoveSelectInfo moveSelectInfo)
    {
        Position pos = new(moveSelectInfo.Position.FEN);
        pos.ApplyMove(moveSelectInfo.Move);
        board.Fen = pos.FEN;
        engine.StartAnalysisAsync(board.Fen);
        vmoves = new List<ExtendedMove>(moveSelectInfo.Game.Moves.GetRange(0, moveSelectInfo.MoveIndex + 1));

    }

    void OnMovePlayed(MovePlayedInfo mpi)
    {
        engine.StartAnalysisAsync(mpi.NewFen);
        if (vmoves == null)
            game.Add(new ExtendedMove(mpi.Move));
        else
        {
            vmoves.Add(new ExtendedMove(mpi.Move));
            game.AddVariation(vmoves);
        }
        Console.WriteLine(game.SANNotation(false, true));
    }

    void OnEngineInfo(Info info)
    {
        if (info.MoveIndex == 1)
        {
            Score = engine.Score;
            ScoreText = engine.ScoreText(0);
        }
    }
}
