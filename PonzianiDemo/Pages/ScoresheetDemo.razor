@page "/scoresheet"
<h3>ScoresheetDemo</h3>

<Scoresheet Game="@game" OnMoveSelected="@OnMoveSelected" Mode="@DisplayMode" Type="@model.NotationType" OtherAttributes="@OtherAttributes" Comments="@model.Comments" 
			Variations ="@model.Variations"/>

<EditForm Model="@model" OnValidSubmit="@HandleValidSubmit">
	<div class="form-group">
		<label for="taPGN">Enter PGN</label>
		<InputTextArea class="form-control" id="taPGN" rows="10" @bind-Value="model.PGNText" />
	</div>
	<div class="form-check">
		<InputCheckbox class="form-check-input" @bind-Value="model.InlineMode" />
		<label>
			Inline Mode:
		</label>
	</div>
	<div class="form-check">
		<InputCheckbox class="form-check-input" @bind-Value="model.Comments" />
		<label>
			Show Comments:
		</label>
	</div>
	<div class="form-check">
		<InputCheckbox class="form-check-input" @bind-Value="model.Variations" />
		<label>
			Show Variations:
		</label>
	</div>
	<div class="form-group">
		<label for="inpType">Select Type</label>
		<InputSelect Name="type" @bind-Value="model.NotationType" id="inpType">
			@foreach (var t in Enum.GetNames(typeof(Scoresheet.NotationType)))
			{
	   <option Name="type" Value="@t">@t</option>
			}
  </InputSelect>
 </div>
 <div class="form-group">
  <label>
   Other Attributes:
  </label>
  <InputText class="form-control" @bind-Value="model.OtherAttributes" />
 </div>
 <button type="submit">Submit</button>
</EditForm>
<div class="alert alert-success" role="alert">
	@EventInfoText
</div>

@code {

}
