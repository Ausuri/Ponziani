@page "/"

<div class="container">
<div class="row justify-content-center form-group">
<Chessboard Id="Test"
			 ShowCoordinates="@model.ShowCoordinates"
			 Size="@model.Size"
			 OtherAttributes="@OtherAttributes"
			 Rotate="@model.Rotate"
			 SetupMode="@SetupMode"
			 Fen="@model.Fen"
			 HighlightLastAppliedMove="@model.HighlightLastMove"
			 OnMovePlayed=OnMovePlayed
			 OnSetupChanged="OnSetupChanged"
			 ColorDarkSquares="@model.ColorDarkSquares"
			 ColorLightSquares="@model.ColorLightSquares"
			 ColorHighlight="@model.HighlightColor"
			 @ref="chessboard" />
</div>
</div>

<EditForm Model="@model">
	<div class="row form-group">
		<label class="col-sm-3 col-form-label">
			Size:
		</label>
		<div class="input-group col-sm-9">
		<InputNumber class="form-control" @bind-Value="model.Size" />
		</div>
	</div>
		<div class="row form-group">
		<label class="col-sm-3 col-form-label">
			Color Dark Squares:
		</label>
		<div class="input-group col-sm-9">
		<input type="color" @bind-value="model.ColorDarkSquares"/>
		</div>
	</div>
	<div class="row form-group">
		<label class="col-sm-3 col-form-label">
			Color Light Squares:
		</label>
		<div class="input-group col-sm-9">
		<input type="color" @bind-value="model.ColorLightSquares"/>
		</div>
	</div>
		<div class="row form-group">
		<label class="col-sm-3 col-form-label">
			Color Square Highlight:
		</label>
		<div class="input-group col-sm-9">
		<input type="color" @bind-value="model.HighlightColor"/>
		</div>
	</div>
	<div class="form-group">
	<div class="form-check">
		<InputCheckbox class="form-check-input" @bind-Value="model.ShowCoordinates" />
		<label>
			Show Coordinates:
		</label>
	</div>
	<div class="form-check">
		<InputCheckbox class="form-check-input" @bind-Value="model.Rotate" />
		<label>
			Rotate:
		</label>
	</div>
	<div class="form-check">
		<InputCheckbox class="form-check-input" @bind-Value="model.HighlightLastMove" />
		<label>
			Highlight Last Move:
		</label>
	</div>
	<div class="form-check">
		<InputCheckbox class="form-check-input" @bind-Value="@SetupMode"/>
		<label>
			Setup Mode:
		</label>
	</div>
	</div>
	<div class="row form-group">
		<label class="col-sm-3 col-form-label">
			Fen:
		</label>
		<div class="input-group col-sm-9">
		<InputText class="form-control" @bind-Value="model.Fen" />
		</div>
	</div>
	<div class="row form-group">
		<label class="col-sm-3 col-form-label">
			Other Attributes:
		</label>
		<div class="input-group col-sm-9">
		<InputText class="form-control" @bind-Value="model.OtherAttributes" />
		</div>
	</div>
	@if (!SetupMode)
	{
		Position pos = new Position(model.Fen);
		string message;
		if (pos.CheckLegal(out message)) {
		var moves = pos.GetMoves();
	 <div class="row form-group">
	  <label class="col-sm-3 col-form-label">
	   Apply Move:
	  </label>
	  <div class="input-group col-sm-9">
	  <select class="form-control" @onchange=ApplyMove>
	   <option>Select Move</option>
				@foreach (Move m in moves)
				{
		   <option value="@m.ToUCIString()">@pos.ToSAN(m)</option>
				}
	  </select>
	  </div>
	 </div>
	} else
	{
	 <div class="alert alert-danger" role="alert"> @message</div>		
	}
	}
</EditForm>
<div class="alert alert-success" role="alert">
	@EventInfoText
</div>

@code {

}
